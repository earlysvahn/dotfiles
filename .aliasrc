
alias ls="eza --color=always --long --git --no-filesize --icons=always --no-time --no-user --no-permissions"

alias git='LANG=en_GB git'
alias gpt='chrome chat.openai.com'
alias mess='chrome messenger'
alias wttr='curl -s "wttr.in/Nyköping?format=🌄%20%S%20➡️%20%20%s%20🌃\n%c%t%20(feels%20like%20%f)\n"'

alias codezsh='code ~/.zshrc'
alias codeha='code ~/dotfiles/.hazshrc'
alias codejira='code ~/dotfiles/.jirazshrc'
alias codegit='code ~/dotfiles/.gitzshrc'
alias codealias='code ~/dotfiles/.aliasrc'
alias root='cd ~/development'

# Updated aliases
alias cfg="~/dotfiles/cloud-config.sh cfg"
alias k9s="~/dotfiles/cloud-config.sh k9s"


alias dbup='docker rm -f CloudSQLProxy 2>/dev/null && docker run -d --name CloudSQLProxy \
  -v $HOME/.config/gcloud/application_default_credentials.json:/path/to/service-account-key.json \
  -p 127.0.0.1:2001-2005:2001-2005 \
  -p 127.0.0.1:2101-2105:2101-2105 \
  --restart unless-stopped \
  gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.1.1 \
  --address 0.0.0.0 \
  -c /path/to/service-account-key.json \
  "bird-nest-dev:europe-north1:services-db-instance?port=2001" \
  "bird-nest-test:europe-north1:services-db-instance?port=2002" \
  "bird-nest-stage:europe-north1:services-db-instance?port=2003" \
  "bird-nest-prod:europe-north1:services-db-instance?port=2004" \
  "bird-nest-prod:europe-north1:services-db-instance-replica?port=2105" \
  "bird-nest-dev:europe-north1:status-db-instance?port=2101" \
  "bird-nest-test:europe-north1:status-db-instance?port=2102" \
  "bird-nest-stage:europe-north1:status-db-instance?port=2103" \
  -i'

alias mkdir="mkdir -pv" 
alias grep="grep -n --color"
alias reload="source ~/.zshrc"
alias x="exit"
alias path='copypath'
alias c='clear && wttr'
alias cat=bat

batcopy() {
    bat --plain "$1" | pbcopy
}
# docker

alias ps="docker ps"
alias tf='terraform'
alias y="yarn"
alias ya="yarn add"
alias p='pnpm'
alias start='pnpm start'
alias install='pnpm install'
alias buni='bun install'
alias buna='bun add'
alias bunr='bun run --watch dev'
alias bunswag='bun run nswag'
alias bunup='bun upgrade'
alias vi="nvm"
alias vim="nvim"
alias view="nvim -R"
alias vimdiff="nvim -d"
alias oldvim='\vim'

tvim() {
    local session_name="nvim"
    local file_path=

    # Check if -n option is set
    while getopts "n:" opt; do
        case $opt in
            n)
                session_name="$OPTARG"
                ;;
            \?)
                echo "Invalid option: -$OPTARG" >&2
                return 1
                ;;
            :)
                echo "Option -$OPTARG requires an argument." >&2
                return 1
                ;;
        esac
    done
    shift $((OPTIND - 1))

    # If file path is provided, set it
    if [[ $# -eq 1 ]]; then
        file_path="$1"
    fi

    if [[ -z $TMUX ]]; then
        # If no tmux session is active, create one
        tmux new-session -s "$session_name" -n nvim -c "$(dirname "$file_path")" "nvim $file_path"
    else
        # If tmux session is active, just launch nvim
        command nvim "$file_path"
    fi
}


#tmux
alias t='tmux'
alias tkill='tmux kill-session -t'
alias ta='tmux attach -t'
alias td='tmux detach'
alias tls='tmux ls'
alias tnew='tmux new -s'
alias tks='tmux kill-server'

# utils
alias notes='joplin'

# typing
alias tt='tt -theme dracula -n 15 -g 1'

alias cd..='cd ..'
alias ..='cd ..'
alias ...='cd ../../../'
alias ....='cd ../../../../'
alias .....='cd ../../../../'
alias .4='cd ../../../../'
alias .5='cd ../../../../..'
alias rmrf='rm -rf'

if [ -x "$(command -v colorls)" ]; then
    alias ls="colorls"
    alias la="colorls -al"
fi

# qmk
alias qmkc='qmk compile -kb keebio/iris/rev2 -km earlysvahn'
alias qmkf='cd ~/qmk_firmware/keyboards/keebio/iris/keymaps'

#spt
alias rspt="brew services restart spotifyd && spt"

#calendar
